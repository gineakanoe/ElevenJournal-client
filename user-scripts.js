/* *****************************
  ***  USER SIGNUP  ***
***************************** */
function userSignUp() {
    // console.log('userSignUp Function Called');
    
    let userEmail = document.getElementById("emailSignup").value;                                   // Setting up 2 variables by pulling input values from DOM with getElementById method
    let userPass = document.getElementById("pwdSignup").value;

    let newUserData = {                                                                             // Set up variable container user object
        user: {
            email: userEmail,
            password: userPass
        }
    };

    console.log(`newUserData --> ${newUserData.user.email} ${newUserData.user.password}`);

    fetch(`http://localhost:3000/user/register`, {                                                  // Fetching from user create endpoint
        method: "POST",                                                                             // Route in server handles POST request, our declared method must match
        headers: {
            "Content-Type": "application/JSON"                                                      // Dealing with json content
        },
        body: JSON.stringify(newUserData)                                                           // Send data through body of request as a json string
    })
        .then(response => response.json())                                                          // Parse response into JSON
        .then(data => {                                                                             
            console.log(data);                                                                      // Console logging the response
            let token = data.sessionToken;                                                          // Creating "token" variable to store response in
            localStorage.setItem("sessionToken", token);                                            // 'setIten' method sets SessionToken in local storage to be token generated by server
            tokenChecker();
        })
        .catch(err => {
            console.error(err)
        })
};


/* *****************************
  ***  USER LOGIN  ***
***************************** */
function userLogin() { 
    let userEmail = document.getElementById("emailLogin").value;
    let userPass = document.getElementById("pwdLogin").value;
    console.log(userEmail, userPass)

    let userData = {
        user: {
            email: userEmail,
            password: userPass
        }
    }
    console.log(userData)

    fetch(`http://localhost:3000/user/login`, {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify(userData)
    })
        .then(response => response.json())
        .then(data => {
            console.log(data)
            let token = data.sessionToken;
            localStorage.setItem("sessionToken", token);
            tokenChecker();
        })
        .catch(err => {
            console.log(err)
        })
};

/* *****************************
  ***  USER LOGOUT  ***
***************************** */
function userLogout() {
    localStorage.setItem("sessionToken", undefined);                                                // Setting SessionToken to undefined means after logout, user will no longer have a token
    console.log(`sessionToken --> ${localStorage.sessionToken}`);                                   // console logs SessionToken is undefined
    tokenChecker();
};

/* *********************************
  ***  TOKEN CHECKER FUNCTION  ***
********************************* */
function tokenChecker() {
    console.log('tokenChecker Function Called');
    
    let display = document.getElementById("journals");
    let header = document.createElement("h5");
    let accessToken = localStorage.getItem("sessionToken");
    let alertText = "Log in or sign up to get dtarted!";

    for (let i = 0; i < display.childNodes.length; i++) {
        display.removeChild(display.firstChild);
    }

    if (accessToken === "undefined") {
        display.appendChild(header);
        header.textContent = alertText;
        header.setAttribute("id", "defaultLogin");
    } else {
        null
    }
};
tokenChecker();